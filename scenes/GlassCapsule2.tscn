[gd_scene load_steps=33 format=2]

[ext_resource path="res://assets/Noise.png" type="Texture" id=1]
[ext_resource path="res://scripts/LavaLamp/FloatingLavalamp.cs" type="Script" id=2]
[ext_resource path="res://assets/Glass.material" type="Material" id=3]
[ext_resource path="res://galaxyshader.tres" type="Material" id=4]

[sub_resource type="CapsuleMesh" id=2]
radius = 0.8
radial_segments = 32
rings = 32

[sub_resource type="SphereMesh" id=8]
radius = 0.5
height = 1.5

[sub_resource type="Gradient" id=36]
offsets = PoolRealArray( 0, 0.541936, 1 )
colors = PoolColorArray( 0.567742, 0.567742, 0.567742, 0.432258, 1, 0, 0, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=37]
gradient = SubResource( 36 )

[sub_resource type="ParticlesMaterial" id=38]
emission_shape = 1
emission_sphere_radius = 0.3
gravity = Vector3( 0, -2, 0 )
initial_velocity = 0.2
initial_velocity_random = 1.0
color = Color( 0.854902, 0, 0, 1 )
color_ramp = SubResource( 37 )

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=22]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=23]

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarConstant" id=26]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=27]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=28]
constant = 10.0

[sub_resource type="VisualShaderNodeScalarOp" id=29]
operator = 2

[sub_resource type="VisualShaderNodeScalarInterp" id=30]

[sub_resource type="VisualShaderNodeScalarFunc" id=31]
function = 4

[sub_resource type="VisualShaderNodeVec3Constant" id=10]

[sub_resource type="VisualShaderNodeScalarOp" id=32]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=33]
constant = Vector3( 0.05, 0, 0 )

[sub_resource type="VisualShaderNodeTexture" id=11]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=12]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=19]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=20]
output_port_for_preview = 0
operator = 9

[sub_resource type="VisualShaderNodeScalarFunc" id=25]
function = 31

[sub_resource type="VisualShader" id=41]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Vector:2
	vec3 n_out2p0 = vec3(0.000000, 0.000000, 0.000000);

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Input:13
	float n_out13p0 = TIME;

// Scalar:14
	float n_out14p0 = 1.000000;

// ScalarOp:15
	float n_out15p0 = n_out13p0 * n_out14p0;

// ScalarFunc:9
	float n_out9p0 = 1.0 - n_out15p0;

// ScalarOp:10
	float n_in10p1 = 2.00000;
	float n_out10p0 = n_out9p0 / n_in10p1;

// ScalarOp:11
	float n_in11p1 = 0.00000;
	float n_out11p0 = n_out10p0 - n_in11p1;

// VectorOp:12
	vec3 n_out12p0 = n_out4p0 + vec3(n_out11p0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out12p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ScalarOp:20
	float n_in20p1 = 3.00000;
	float n_out20p0 = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)) * n_in20p1;

// Input:5
	float n_out5p0 = TIME;

// Scalar:16
	float n_out16p0 = 10.000000;

// ScalarOp:17
	float n_out17p0 = n_out5p0 * n_out16p0;

// ScalarMix:18
	float n_in18p1 = 1.00000;
	float n_in18p2 = 0.50000;
	float n_out18p0 = mix(n_out17p0, n_in18p1, n_in18p2);

// ScalarFunc:6
	float n_out6p0 = sin(n_out18p0);

// ScalarFunc:19
	float n_out19p0 = acos(n_out6p0);

// ScalarOp:7
	float n_in7p1 = 2.00000;
	float n_out7p0 = n_out19p0 / n_in7p1;

// ScalarOp:8
	float n_out8p0 = step(n_out20p0, n_out7p0);

// Vector:21
	vec3 n_out21p0 = vec3(0.050000, 0.000000, 0.000000);

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out8p0;
	EMISSION = n_out21p0;
	NORMAL = n_out3p0;
	NORMALMAP = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -501.617, 11.6323 )
nodes/fragment/0/position = Vector2( 1320, 120 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( 240, 20 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( 280, 140 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( -260, 80 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( -600, 540 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( 60, 580 )
nodes/fragment/7/node = SubResource( 19 )
nodes/fragment/7/position = Vector2( 520, 580 )
nodes/fragment/8/node = SubResource( 20 )
nodes/fragment/8/position = Vector2( 780, 520 )
nodes/fragment/9/node = SubResource( 25 )
nodes/fragment/9/position = Vector2( -680, 320 )
nodes/fragment/10/node = SubResource( 21 )
nodes/fragment/10/position = Vector2( -440, 300 )
nodes/fragment/11/node = SubResource( 22 )
nodes/fragment/11/position = Vector2( -220, 300 )
nodes/fragment/12/node = SubResource( 23 )
nodes/fragment/12/position = Vector2( 20, 180 )
nodes/fragment/13/node = SubResource( 24 )
nodes/fragment/13/position = Vector2( -1140, 300 )
nodes/fragment/14/node = SubResource( 26 )
nodes/fragment/14/position = Vector2( -1160, 440 )
nodes/fragment/15/node = SubResource( 27 )
nodes/fragment/15/position = Vector2( -880, 320 )
nodes/fragment/16/node = SubResource( 28 )
nodes/fragment/16/position = Vector2( -600, 640 )
nodes/fragment/17/node = SubResource( 29 )
nodes/fragment/17/position = Vector2( -360, 560 )
nodes/fragment/18/node = SubResource( 30 )
nodes/fragment/18/position = Vector2( -160, 560 )
nodes/fragment/19/node = SubResource( 31 )
nodes/fragment/19/position = Vector2( 280, 540 )
nodes/fragment/20/node = SubResource( 32 )
nodes/fragment/20/position = Vector2( 540, 360 )
nodes/fragment/21/node = SubResource( 33 )
nodes/fragment/21/position = Vector2( 620, 160 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 9, 0, 10, 0, 10, 0, 11, 0, 11, 0, 12, 1, 4, 0, 12, 0, 12, 0, 3, 0, 3, 0, 0, 8, 13, 0, 15, 0, 14, 0, 15, 1, 15, 0, 9, 0, 5, 0, 17, 0, 16, 0, 17, 1, 17, 0, 18, 0, 18, 0, 6, 0, 6, 0, 19, 0, 19, 0, 7, 0, 3, 0, 20, 0, 3, 0, 0, 7, 21, 0, 0, 5, 7, 0, 8, 1, 8, 0, 0, 1, 20, 0, 8, 0 )

[sub_resource type="ShaderMaterial" id=39]
shader = SubResource( 41 )

[sub_resource type="SphereMesh" id=40]
material = SubResource( 39 )
radius = 0.25
height = 0.5

[node name="Glass" type="MeshInstance"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 2.47076, 0 )
mesh = SubResource( 2 )
material/0 = ExtResource( 3 )
script = ExtResource( 2 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0.00659132, -0.00929189, -4.76837e-07 )
mesh = SubResource( 8 )
material/0 = ExtResource( 4 )

[node name="Particles" type="Particles" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0.00659132, -0.00929187, 0.50659 )
amount = 16
visibility_aabb = AABB( -0.565484, -0.977631, -0.570606, 1.13097, 1.95526, 1.14121 )
process_material = SubResource( 38 )
draw_pass_1 = SubResource( 40 )
