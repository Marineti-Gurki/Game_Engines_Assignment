[gd_resource type="VisualShader" load_steps=6 format=2]

[ext_resource path="res://assets/perlinnose.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
output_port_for_preview = 0
constant = 1.2

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 9

[sub_resource type="VisualShaderNodeVec3Constant" id=9]
constant = Vector3( 0, 3, 3 )

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = ExtResource( 1 )

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Vector:5
	vec3 n_out5p0 = vec3(0.000000, 3.000000, 3.000000);

// Scalar:3
	float n_out3p0 = 1.200000;

// ScalarFunc:4
	float n_out4p0 = log(n_out3p0);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Output:0
	ALBEDO = n_out5p0;
	ALPHA = n_out4p0;
	NORMAL = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 235.705, 93.92 )
nodes/fragment/0/position = Vector2( 1320, 100 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 740, 240 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 1020, 220 )
nodes/fragment/5/node = SubResource( 9 )
nodes/fragment/5/position = Vector2( 780, 120 )
nodes/fragment/6/node = SubResource( 10 )
nodes/fragment/6/position = Vector2( 1000, 300 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 0, 1, 5, 0, 0, 0, 6, 0, 0, 7 )
